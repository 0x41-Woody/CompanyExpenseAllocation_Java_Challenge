package tek.test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import java.math.BigDecimal;

import org.junit.Test;

import com.aaronhible.codechallenge.domain.employee.model.EmployeeId;

import tek.main.model.Department;
import tek.main.model.Developer;
import tek.main.model.Employee;
import tek.main.model.Manager;
import tek.main.model.Organization;
import tek.main.model.QATester;

public class MainTest {

	/**
	 * UseCase: QA Testers warrant an allocation of $500 each.
	 */
	@Test
	public void qaTesterTestersWarrantAllocation() {

		// expected
		BigDecimal expectedAllocation = new BigDecimal(1000);

		// setup / action
		Employee qaTester = new QATester();

		// assert
		assertEquals(employee.getEmployeeId(), employeeId);
		assertTrue(employee instanceof QATester);
		assertEquals(expectedAllocation, employee.getExpenseAllocation());

	}
	
	
	
	
	
	public void exampleScenario() {
		
		/**
		 * For the given hierarchy:
		 * A. Manager A
		 *    I. Manager B
		 *       1. Developer A
		 *       2. QATester A
		 *       
		 * B. Manager C
		 *    I. Manager D
		 *    
		 * C. Manager E
		 *    I. Developer B
		 */
		
		//Establish all the employees
		Manager managerA = new Manager();
		Manager managerB = new Manager();
		Manager managerC = new Manager();
		Manager managerD = new Manager();
		Manager managerE = new Manager();
		Employee developerA = new Developer();
		Employee developerB = new Developer();
		Employee qaTesterA = new QATester();

		//Set up reporting employee hierarchy
		managerA.addReportingEmployee(managerB);
		managerB.addReportingEmployee(developerA);
		managerB.addReportingEmployee(qaTesterA);
		managerC.addReportingEmployee(managerD);
		managerE.addReportingEmployee(developerB);
		
		//Establish Departments, with head managers
		Department departmentA = new Department(managerA);
		Department departmentB = new Department(managerC);
		Department departmentC = new Department(managerE);
		
		//Establish organization & add Departments
		Organization organization = new Organization();
		organization.addDepartment(departmentA);
		organization.addDepartment(departmentB);
		organization.addDepartment(departmentC);
		
		
	}
}
